  

  

Playbook for sudo management 

  

[ansadm@server1 sys_mgmt]$ cat playbook_sudomgmt.yml 

--- 

- name: Sudo management playbook 

   hosts: localserver 

   gather_facts: yes 

   user: ansadm 

   become: yes 

   vars_files: 

       - group_vars/sudovars.yml 

  

   roles: 

      - sudo_mgmt 

  

  

Variable file   

This is the only file we need to modify and here we can change value of variables as per requirement. 

  

[ansadm@server1 sys_mgmt]$ cat group_vars/sudovars.yml 

--- 

  sudo_entry: "joshilm    ALL=NOPASSWD: /bin/bash" 

  sudo_del: joshilm 

  sudo_find: user1 

  

  

  

Tasks of role sudo_mgmt 

  

[ansadm@server1 sys_mgmt]$ cat roles/sudo_mgmt/tasks/main.yml 

--- 

  

- name: Adding sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        state: present 

        backup: yes 

        regexp: '^{{ sudo_entry }}' 

        line: '{{ sudo_entry }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: add_sudo_entry 

  

  

- name: Removing sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        backup: yes 

        state: absent 

        regexp: '^{{ sudo_del }}' 

        line: '{{ sudo_del }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: remove_sudo_entry 

  

- name: search a sudo entry on {{ ansible_hostname }} 

  shell: grep "^{{ sudo_find }}" /etc/sudoers 

 register: sudo_entry_exists 

  ignore_errors: yes 

  failed_when: false 

  changed_when: false 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} does not exist in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc != 0 

  tags: find_sudo_entry 

  

  

  

Inventory File 

  

[ansadm@server1 ansible]$ cat sys_mgmt/hosts 

[localserver] 

localhost       ansible_connection=local 

  

  

Directory tree structure for sys_mgmt 

[ansadm@server1 sys_mgmt]$ pwd 

/etc/ansible/sys_mgmt 

[ansadm@server1 sys_mgmt]$ tree 

. 

|── group_vars 

│         ├── sudovars.yml 

|── hosts 

├── playbook_sudomgmt.yml 

├── roles 

       ├── sudo_mgmt 

                └── tasks 

                       └── main.yml 

  

  

  

Ansible playbook commands 

To list tasks of a playbook: 

[ansadm@server1 sys_mgmt]$ ansible-playbook playbook_sudomgmt.yml --list-tasks 

 

To list tags of a playbook: 

[ansadm@server1 sys_mgmt]$ ansible-playbook playbook_sudomgmt.yml --list-tags 

 

To find an entry in sudoers file: 

[ansadm@server1 sys_mgmt]$ ansible-playbook playbook_sudomgmt.yml -t find_sudo_entry 

 

To add an entry in sudoers file: 

[ansadm@server1 sys_mgmt]$ ansible-playbook playbook_sudomgmt.yml -t add_sudo_entry 

 

To delete entry: 

[ansadm@server1 sys_mgmt]$ ansible-playbook playbook_sudomgmt.yml -t remove_sudo_entry 

  

  

------------------------------------------------------------------------------------------- 

  

[ansadm@server1 sys_mgmt]$ cat playbook_sudomgmt.yml 

--- 

 - name: Sudo management playbook 

   hosts: localserver 

   gather_facts: yes 

   user: ansadm 

   become: yes 

   vars_files: 

       - group_vars/sudovars.yml 

  

   roles: 

      - sudo_mgmt 

  

  

  

[ansadm@server1 sys_mgmt]$ cat group_vars/sudovars.yml 

--- 

  sudo_entry: "joshilm    ALL=NOPASSWD: /bin/bash" 

  sudo_del: joshilm 

  sudo_find: user1 

  

  

  

[ansadm@server1 sys_mgmt]$ cat roles/sudo_mgmt/tasks/main.yml 

--- 

  

- name: Adding sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        state: present 

        backup: yes 

        regexp: '^{{ sudo_entry }}' 

        line: '{{ sudo_entry }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: add_sudo_entry 

  

  

- name: Removing sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        backup: yes 

        state: absent 

        regexp: '^{{ sudo_del }}' 

        line: '{{ sudo_del }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: remove_sudo_entry 

  

- name: search a sudo entry on {{ ansible_hostname }} 

  ##command: grep "^{{ sudo_find }}:" /etc/sudoers 

  shell: grep "^{{ sudo_find }}" /etc/sudoers 

  #ignore_errors: yes 

  register: sudo_entry_exists 

  ##check_mode: no 

  ignore_errors: yes 

  failed_when: false 

  changed_when: false 

  ##changed_when: no 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} does not exist in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc != 0 

  tags: find_sudo_entry 

  

  

  

  

[ansadm@server1 sys_mgmt]$ pwd 

/etc/ansible/sys_mgmt 

[ansadm@server1 sys_mgmt]$ tree 

. 

|── group_vars 

│            ├── sudovars.yml 

|── hosts 

├── playbook_sudomgmt.yml 

├── roles 

            ├── sudo_mgmt 

                         └── tasks 

                                 └── main.yml 

  

**************************************************************************** 

/etc/ansible/sys_mgmt 

[myadmin@server1 sys_mgmt]$ cat playbook_sudomgmt.yml 

--- 

 - name: Sudo management playbook 

   hosts: testserver 

   gather_facts: yes 

   user: myadmin 

   become: yes 

   vars_files: 

       - group_vars/sudovars.yml 

  

   roles: 

      - sudo_mgmt 

[myadmin@server1 sys_mgmt]$  

  

----------------------------------------------------------------- 

  

[myadmin@server1 sys_mgmt]$ cat group_vars/sudovars.yml 

--- 

  sudo_entry: "xyz    ALL=NOPASSWD: /bin/bash" 

  sudo_del: xyz 

  sudo_find: myadmin 

  sudo_out_dir: "/var/tmp" 

  

------------------------------------------------ 

[myadmin@server1 sys_mgmt]$ cat roles/sudo_mgmt/tasks/main.yml 

--- 

 ## Adding an entry in sudoers file 

 - import_tasks: sudoadd.yml 

  

 ## Removing an entry from sudoers file 

 - import_tasks: sudodel.yml 

  

 ## Search an entry in sudoers file 

 - import_tasks: sudosearch.yml 

[myadmin@server1 sys_mgmt]$ 

  

--------------------------------------------------- 

[myadmin@server1 sys_mgmt]$ cat roles/sudo_mgmt/tasks/sudoadd.yml 

--- 

  

- name: Adding sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        state: present 

        backup: yes 

        regexp: '^{{ sudo_entry }}' 

        line: '{{ sudo_entry }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: add_sudo_entry 

  

  

[myadmin@server1 sys_mgmt]$ 

  

----------------------------------------------------- 

[myadmin@server1 sys_mgmt]$ cat roles/sudo_mgmt/tasks/sudodel.yml 

--- 

  

- name: Removing sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        backup: yes 

        state: absent 

        regexp: '^{{ sudo_del }}' 

        line: '{{ sudo_del }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: remove_sudo_entry 

[myadmin@server1 sys_mgmt]$ 

  

--------------------------------------------------------------------- 

[myadmin@server1 sys_mgmt]$ cat roles/sudo_mgmt/tasks/sudosearch.yml 

--- 

- name: search a sudo entry on {{ ansible_hostname }} 

  shell: grep "^{{ sudo_find }}" /etc/sudoers 

  register: sudo_entry_exists 

  ignore_errors: yes 

  failed_when: false 

  changed_when: false 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} does not exist in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc != 0 

  tags: find_sudo_entry 

  

- name: write data to a file if entry exists 

  lineinfile: 

     path: "{{ sudo_out_dir }}/sudofind-{{ ansible_date_time.date }}.txt" 

     create: yes 

     line: "{{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  delegate_to: localhost 

  tags: find_sudo_entry 

[myadmin@server1 sys_mgmt]$ 

  

*********************************************************** 

  

  

# defaults file for sudomgmt 

[myadmin@server1 sudomgmt]$ cat vars/main.yml 

--- 

  sudo_entry: "xyz    ALL=NOPASSWD: /bin/bash" 

  sudo_del: xyz 

  sudo_find: 

     - user1 

     - myadmin 

  sudo_out_dir: "/var/tmp" 

  

---------------------------------------------------------------------- 

  

[myadmin@server1 sudomgmt]$ cat tasks/main.yml 

--- 

 ## Adding an entry in sudoers file 

 - import_tasks: sudoadd.yml 

  

 ## Removing an entry from sudoers file 

 - import_tasks: sudodel.yml 

  

 ## Search an entry in sudoers file 

 - import_tasks: sudosearch.yml 

[myadmin@server1 sudomgmt]$ 

  

  

=========================================== 

[myadmin@server1 sudomgmt]$ cat tasks/sudoadd.yml 

--- 

  

- name: Adding sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        state: present 

        backup: yes 

        regexp: '^{{ sudo_entry }}' 

        line: '{{ sudo_entry }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: add_sudo_entry 

  

=========================================== 

[myadmin@server1 sudomgmt]$ cat tasks/sudodel.yml 

--- 

  

- name: Removing sudo entry on {{ ansible_hostname }} 

  lineinfile: 

        path: /etc/sudoers 

        backup: yes 

        state: absent 

        regexp: '^{{ sudo_del }}' 

        line: '{{ sudo_del }}' 

        validate: '/usr/sbin/visudo -cf %s' 

  tags: remove_sudo_entry 

  

================================================ 

[myadmin@server1 sudomgmt]$ cat tasks/sudosearch.yml 

--- 

- name: search a sudo entry on {{ ansible_hostname }} 

  shell: grep "^{{ item }}" /etc/sudoers 

  register: sudo_entry_exists 

  ignore_errors: yes 

  failed_when: false 

  changed_when: false 

  with_items: "{{ sudo_find }}" 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} does not exist in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc != 0 

  with_items: "{{ sudo_find }}" 

  tags: find_sudo_entry 

  

- name: write data to a file if entry exists 

  lineinfile: 

     path: "{{ sudo_out_dir }}/sudofind-{{ ansible_date_time.date }}.txt" 

     state: present 

     create: yes 

     line: "{{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  delegate_to: localhost 

  tags: find_sudo_entry 

  

----------------------------------------------------------------------------- 

[myadmin@server1 sudomgmt]$ cat tasks/sudosearch.yml_backup 

--- 

- name: search a sudo entry on {{ ansible_hostname }} 

  shell: grep "^{{ item }}" /etc/sudoers 

  register: sudo_entry_exists 

  ignore_errors: yes 

  failed_when: false 

  changed_when: false 

  with_items: "{{ sudo_find }}" 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  tags: find_sudo_entry 

- debug: 

    msg: > 

      " {{ sudo_find }} does not exist in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc != 0 

  with_items: "{{ sudo_find }}" 

  tags: find_sudo_entry 

  

- name: write data to a file if entry exists 

  lineinfile: 

     path: "{{ sudo_out_dir }}/sudofind-{{ ansible_date_time.date }}.txt" 

     state: present 

     create: yes 

     line: "{{ sudo_find }} exists in sudoers file of {{ ansible_hostname }}" 

  when: sudo_entry_exists.rc == 0 

  delegate_to: localhost 

  tags: find_sudo_entry 

  

-------------------------------------------------------------------------------------- 

  

  

  

 